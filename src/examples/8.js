// Core
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const getInitialState = () => Number(localStorage.getItem('count')) || 0;

const Parent = () => {                                          /* ‚Üì –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º —É React ‚Üì */
    const [ count1, setCount1 ] = useState(getInitialState);    /* (1) —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è—á–µ–π–∫–∏ –ø–∞–º—è—Ç–∏ [1] */
    const [ count2, setCount2 ] = useState(0);                  /* (2) —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è—á–µ–π–∫–∏ –ø–∞–º—è—Ç–∏ [1, 2] */

    const _increment1 = () => setCount1(count1 + 1);            /* (3) —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ */
    const _reset1 = () => setCount1(0);                         /* (4) —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ */
    const _decrement1 = () => setCount1(count1 - 1);            /* (5) —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ */

    const _increment2 = () => setCount2(count2 + 1);            /* (6) —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ */
    const _reset2 = () => setCount2(0);                         /* (7) —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ */
    const _decrement2 = () => setCount2(count2 - 1);            /* (8) —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ */

    /**
     * –ö–∞–∫ –≤–∞—Ä–∏–∞–Ω—Ç, –æ useEffect –º–æ–∂–Ω–æ –¥—É–º–∞—Ç—å,
     * –∫–∞–∫ –æ componentDidMount + componentDidUpdate.
     */
    useEffect( //                                               /* (9) —ç—Ñ—Ñ–µ–∫—Ç (—Å–∞–π–¥): —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —è—á–µ–π–∫–∏ –ø–∞–º—è—Ç–∏ [1, 2, 3] */
        () => {                                                 /* (10) —Ç–µ–ª–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞ –≤ DOM */
            console.log('üì¶ –ó–∞–ø–∏—Å—å –≤ localStorage');
            localStorage.setItem('count', count1);
        },
        [ count1 ], /** –í—ã–ø–æ–ª–Ω—è–µ—Ç useEffect —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å. */
    );
    /**
     * –ò–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç useEffect ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±
     * –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞.
     */

    return (
        <section className = 'example'>
            <h1>First count: {count1}</h1>
            <div>
                <button onClick = { _increment1 }>+</button>
                <button onClick = { _reset1 }>Reset</button>
                <button onClick = { _decrement1 }>-</button>
            </div>
            <h1>Second count: {count2}</h1>
            <div>
                <button onClick = { _increment2 }>+</button>
                <button onClick = { _reset2 }>Reset</button>
                <button onClick = { _decrement2 }>-</button>
            </div>
        </section>
    );
};

render(<Parent />, document.getElementById('app'));
