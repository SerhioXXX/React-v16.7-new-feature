// Core
import React, { useState, useEffect } from 'react';
import { render } from 'react-dom';

const Parent = () => {
    const [ count, setCount ] = useState(0);

    const _increment = () => setCount(count + 1);
    // const _increment = () => {
    //     setCount((prevCount) => {
    //         // console.log('‚åöÔ∏è setCount, count', count);
    //         // console.log('‚åöÔ∏è setCount, prevCount', prevCount);

    //         return prevCount + 1;
    //     });
    // };
    const _reset = () => setCount(0);
    const _decrement = () => setCount(count - 1);

    useEffect(() => {
        const timer = setInterval(_increment, 1000);

        console.log('‚è≥ useEffect');

        return () => {
            console.log('‚åõÔ∏è clearing');
            clearInterval(timer);
        };
        /**
         * –ï—Å–ª–∏ –≤—Ç–æ—Ä—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º useEffect –ø–µ—Ä–µ–¥–∞—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤,
         * —Ç–æ useEffect —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ componentDidMount + componentWillUnmount.
         *
         * –¢–æ –µ—Å—Ç—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–µ–ª–æ useEffect ‚Äî –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä.
         * –ê –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏–∑ DOM –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è clearTimeout.
         */
    }, []);

    // console.log('üñ• render, count', count);

    return (
        <section className = 'example'>
            <h1>–°—á—ë—Ç—á–∏–∫: {count}</h1>
            <div>
                <button onClick = { _increment }>+</button>
                <button onClick = { _reset }>–û–±–Ω—É–ª–∏—Ç—å</button>
                <button onClick = { _decrement }>-</button>
            </div>
        </section>
    );
};

render(<Parent />, document.getElementById('app'));
